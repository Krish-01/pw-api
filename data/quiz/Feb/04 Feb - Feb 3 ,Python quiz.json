{
  "data": {
    "lesson": {
      "_id": "63de53bc194b22913ae3e146",
      "title": "Feb 3 ,Python quiz",
      "courseId": "63a2eb428899436daf7eb489",
      "quizQuestions": [
        {
          "_id": "63de53bc194b22111ce3e147",
          "title": "<p>What is the purpose of a function in Python?</p>",
          "options": [
            {
              "name": "<p>To break up a program into smaller, reusable pieces of code</p>"
            },
            {
              "name": "<p>&nbsp;To store data in memory</p>"
            },
            {
              "name": "<p>To perform a specific task or set of tasks</p>"
            },
            {
              "name": "<p>To control the flow of a program</p>"
            }
          ]
        },
        {
          "_id": "63de53bc194b22d265e3e148",
          "title": "<p>What is the syntax for defining a function in Python?</p>",
          "options": [
            {
              "name": "<p>define function_name(arguments):</p>"
            },
            {
              "name": "<p>function function_name(arguments):</p>"
            },
            {
              "name": "<p>def function_name(arguments)</p>"
            },
            {
              "name": "<p>&nbsp;create function_name(arguments):</p>"
            }
          ]
        },
        {
          "_id": "63de53bc194b2231d3e3e149",
          "title": "<p>What are parameter passing in Python?</p>",
          "options": [
            {
              "name": "<p>&nbsp;The process of sending data to a function as input</p>"
            },
            {
              "name": "<p>&nbsp;The process of storing data in memory</p>"
            },
            {
              "name": "<p>The process of returning data from a function</p>"
            },
            {
              "name": "<p>&nbsp;The process of manipulating data in a function</p>"
            }
          ]
        },
        {
          "_id": "63de53bc194b22420fe3e14a",
          "title": "<p>What is the purpose of iterators in Python?</p>",
          "options": [
            {
              "name": "<p>To repeat a block of code a specified number of times</p>"
            },
            {
              "name": "<p><strong>&nbsp;</strong>To allow for efficient access to elements in a sequence one at a time</p>"
            },
            {
              "name": "<p>To store data in memory</p>"
            },
            {
              "name": "<p>To manipulate data in a function</p>"
            }
          ]
        },
        {
          "_id": "63de53bc194b223c8fe3e14b",
          "title": "<p>What is a generator function in Python?</p>",
          "options": [
            {
              "name": "<p>A function that generates a sequence of values</p>"
            },
            {
              "name": "<p>&nbsp;A function that creates an iterator</p>"
            },
            {
              "name": "<p>A function that performs a specific task or set of tasks</p>"
            },
            {
              "name": "<p>&nbsp;A function that breaks up a program into smaller, reusable pieces of code</p>"
            }
          ]
        },
        {
          "_id": "63de53bc194b2262cae3e14c",
          "title": "<p>What is the difference between a normal function and a generator function in Python?</p>",
          "options": [
            {
              "name": "<p>&nbsp;Normal functions return a single value, while generator functions return an iterator</p>"
            },
            {
              "name": "<p>Normal functions use the return statement, while generator functions use the yield statement</p>"
            },
            {
              "name": "<p>Normal functions can only be used once, while generator functions can be used multiple times</p>"
            },
            {
              "name": "<p>&nbsp;Normal functions can only return numbers, while generator functions can return any type of data</p>"
            }
          ]
        }
      ],
      "type": "quiz",
      "resources": [],
      "createdAt": "2023-02-04T12:46:52.852Z",
      "updatedAt": "2023-02-04T12:46:52.852Z",
      "__v": 0
    }
  }
}